# network size
SIZE 128

# parameters of periodic execution
CYCLES 141
# 1 cycle lasts 1000 ms = 1 s
CYCLE 1

# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 0
MAXDELAY 0
# drop is a probability, 0<=DROP<=1
DROP 0

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

protocol.lnk example.newscast.SimpleNewscast
protocol.lnk.cache 20
protocol.lnk.step CYCLE

protocol.urt UniformRandomTransport
protocol.urt.mindelay (CYCLE*MINDELAY)/100
protocol.urt.maxdelay (CYCLE*MAXDELAY)/100

protocol.tr UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop DROP

protocol.scut scuttlebutt.Scuttlebutt
protocol.scut.linkable lnk
protocol.scut.transport tr
protocol.scut.order breadth
# protocol.scut.mtu 1024
protocol.scut.step CYCLE

init.rndlink WireKOut
init.rndlink.k 20
init.rndlink.protocol lnk

init.dbinit scuttlebutt.DatabaseInit
init.dbinit.protocol scut
init.dbinit.keys 64

init.sch CDScheduler
init.sch.protocol scut
# init.sch.randstart

control.app scuttlebutt.Application
control.app.protocol scut
control.app.maxsize 10
control.app.mtu 100
# One update every 4 cycles, initially
# Then it doubles update frequency
control.app.step CYCLE

control.so scuttlebutt.ScuttlebuttObserver
control.so.protocol scut
control.so.step CYCLE
